/* eslint-disable */
export default async () => {
    const t = {
        [".pnpm/@nestjs+common@11.0.11_reflect-metadata@0.2.2_rxjs@7.8.2/node_modules/@nestjs/common/enums/http-status.enum"]: await import(".pnpm/@nestjs+common@11.0.11_reflect-metadata@0.2.2_rxjs@7.8.2/node_modules/@nestjs/common/enums/http-status.enum"),
        ["./apply/dto/PassHashResponse.dto"]: await import("./apply/dto/PassHashResponse.dto"),
        ["./apply/dto/PassCallbackResponse.dto"]: await import("./apply/dto/PassCallbackResponse.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./apply/dto/PassHashResponse.dto"), { "PassHashResponseDto": { data: { required: true, type: () => ({ res_cd: { required: true, type: () => String }, res_msg: { required: true, type: () => String } }), description: "KCP \uACB0\uACFC Object" }, url: { required: false, type: () => String, description: "KCP \uBCF8\uC778\uD655\uC778 \uC694\uCCAD URL", example: "https://cert.kcp.co.kr/kcp_cert/cert_view.jsp" }, formData: { required: false, type: () => ({ site_cd: { required: true, type: () => String }, ordr_idxx: { required: true, type: () => String }, req_tx: { required: true, type: () => String }, cert_method: { required: true, type: () => String }, up_hash: { required: true, type: () => String }, cert_otp_use: { required: true, type: () => String }, web_siteid_hashYN: { required: true, type: () => String }, web_siteid: { required: true, type: () => String }, Ret_URL: { required: true, type: () => String }, cert_enc_use_ext: { required: true, type: () => String }, kcp_merchant_time: { required: true, type: () => String }, kcp_cert_lib_ver: { required: true, type: () => String }, kcp_cert_pass_use: { required: false, type: () => String }, kcp_cert_intent_use: { required: false, type: () => String }, kcp_page_submit_yn: { required: true, type: () => String } }), description: "KCP \uBCF8\uC778\uD655\uC778 \uC694\uCCAD Form Data" } } }], [import("./apply/dto/PassCallbackRequest.dto"), { "PassCallbackRequestDto": { res_cd: { required: true, type: () => String, description: "\uACB0\uACFC \uCF54\uB4DC", example: "0000" }, res_msg: { required: true, type: () => String, description: "\uACB0\uACFC \uBA54\uC2DC\uC9C0", example: "\uC815\uC0C1\uCC98\uB9AC" }, req_tx: { required: true, type: () => String, description: "\uC694\uCCAD \uC885\uB958 \uAD6C\uBD84", example: "otp_auth" }, cert_no: { required: true, type: () => String, description: "\uBCF8\uC778\uD655\uC778 \uACE0\uC720\uD55C \uC778\uC99D \uAC70\uB798\uBC88\uD638", example: "20220913123456" }, ordr_idxx: { required: true, type: () => String, description: "PASS \uBCF8\uC778\uC778\uC99D \uC694\uCCAD ID", example: "KGH20220913123456@abcdefghij" }, enc_cert_data2: { required: true, type: () => String, description: "\uAC1C\uC778\uC815\uBCF4 \uC554\uD638\uD654\uAC12", example: ".1.C73CFBAEFE2E9B89DFCEFA16E9607D0" }, up_hash: { required: true, type: () => String, description: "\uC694\uCCAD hash data", example: "B57CFD6CB4ADAEE...F6002066B1" }, dn_hash: { required: true, type: () => String, description: "\uC751\uB2F5\uB370\uC774\uD130 \uAC80\uC99D \uD574\uC26C", example: "93B83739C223DSSA93809D483920323A43C3893182" } } }], [import("./apply/dto/PassCallbackResponse.dto"), { "PassCallbackResponseDto": { res_cd: { required: true, type: () => String, description: "\uACB0\uACFC \uCF54\uB4DC", example: "0000" }, res_msg: { required: true, type: () => String, description: "\uACB0\uACFC \uBA54\uC2DC\uC9C0", example: "\uC815\uC0C1\uCC98\uB9AC" }, user_name: { required: true, type: () => String, description: "\uBA85\uC758\uC790\uBA85", example: "\uD64D\uAE38\uB3D9" }, phone_no: { required: true, type: () => String, description: "\uBCF8\uC778\uD655\uC778 \uD734\uB300\uD3F0 \uBC88\uD638", example: "01012345678" }, is_parent: { required: true, type: () => Boolean, description: "\uBA85\uC758\uC790\uAC00 \uC790\uB140 \uB300\uC2E0 \uC778\uC99D \uD55C \uACBD\uC6B0 (\uCD5C\uC18C 25\uC138\uC778 \uACBD\uC6B0)", example: false } } }], [import("./common/dto/APIException.dto"), { "APIException": { status: { required: true, description: "\uC5D0\uB7EC ENUM (ENUM Type)", example: "HttpStatus.INTERNAL_SERVER_ERROR", enum: t[".pnpm/@nestjs+common@11.0.11_reflect-metadata@0.2.2_rxjs@7.8.2/node_modules/@nestjs/common/enums/http-status.enum"].HttpStatus }, message: { required: true, type: () => String, description: "\uC5D0\uB7EC \uBA54\uC2DC\uC9C0", example: "\uB0B4\uBD80 \uC11C\uBC84 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.", default: "\uB0B4\uBD80 \uC11C\uBC84 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4." }, data: { required: false, type: () => Object } } }], [import("./common/dto/APIResponse.dto"), { "APIResponseDto": { code: { required: true, type: () => String, description: "\uC0C1\uD0DC \uCF54\uB4DC (ENUM)", example: "OPERATION_COMPLETE" }, status: { required: true, type: () => Number, description: "HTTP \uC0C1\uD0DC \uCF54\uB4DC", example: 200 }, data: { required: false, type: () => Object }, responseAt: { required: true, type: () => String, description: "\uC694\uCCAD \uC2E4\uD589 \uB2F9\uC2DC \uC11C\uBC84 \uC2DC\uAC04 (ISO 8601)", example: "2021-08-01T00:00:00.000Z" } } }]], "controllers": [[import("./club/club.controller"), { "ClubController": { "retrieveClubInfo": {}, "retrieveClubApplicationForm": {}, "updateClubApplicationForm": {}, "retrieveClubAdmins": {}, "addClubAdmin": {}, "deleteClubAdmin": {} } }], [import("./apply/apply.controller"), { "ApplyController": { "createApplication": {}, "retrieveApplicationsList": {}, "sendBulkNotification": {}, "retrieveApplication": {}, "updateApplicationStatus": {}, "deleteApplication": {}, "sendNotification": {}, "finalSubmit": {}, "getPassHashData": { type: t["./apply/dto/PassHashResponse.dto"].PassHashResponseDto }, "passCallback": { type: Object } } }], [import("./schedule/schedule.controller"), { "ScheduleController": { "retrieveSchedules": {}, "createSchedule": {}, "updateSchedule": {} } }], [import("./cdn/cdn.controller"), { "CdnController": { "createPresignedUrl": {} } }], [import("./notice/notice.controller"), { "NoticeController": { "retrieveNoticesList": {}, "retrieveNotice": {}, "createNotice": {}, "updateNotice": {}, "deleteNotice": {} } }], [import("./status/status.controller"), { "StatusController": { "retrieveServerStatus": {}, "updateServerStatus": {} } }], [import("./advertisement/advertisement.controller"), { "AdvertisementController": { "retrieveAdvertisement": {} } }]] } };
};