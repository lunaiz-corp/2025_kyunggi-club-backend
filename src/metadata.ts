/* eslint-disable */
export default async () => {
    const t = {
        ["./common/repository/entity/member.entity"]: await import("./common/repository/entity/member.entity"),
        ["./common/repository/entity/club.entity"]: await import("./common/repository/entity/club.entity"),
        [".pnpm/@nestjs+common@11.0.11_reflect-metadata@0.2.2_rxjs@7.8.2/node_modules/@nestjs/common/enums/http-status.enum"]: await import(".pnpm/@nestjs+common@11.0.11_reflect-metadata@0.2.2_rxjs@7.8.2/node_modules/@nestjs/common/enums/http-status.enum"),
        ["./common/repository/entity/apply.entity"]: await import("./common/repository/entity/apply.entity"),
        ["./common/repository/entity/schedule.entity"]: await import("./common/repository/entity/schedule.entity"),
        ["./common/repository/entity/notice.entity"]: await import("./common/repository/entity/notice.entity"),
        ["./common/repository/entity/status.entity"]: await import("./common/repository/entity/status.entity"),
        ["./auth/dto/response/sign-in.response.dto"]: await import("./auth/dto/response/sign-in.response.dto"),
        ["./apply/dto/response/pass-hash.response.dto"]: await import("./apply/dto/response/pass-hash.response.dto"),
        ["./cdn/dto/response/presigned-url.response.dto"]: await import("./cdn/dto/response/presigned-url.response.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./common/repository/entity/club.entity"), { "ClubEntity": { id: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, members: { required: true, type: () => [t["./common/repository/entity/member.entity"].MemberEntity] } }, "ClubTemplateEntity": { id: { required: true, type: () => String }, club: { required: true, type: () => t["./common/repository/entity/club.entity"].ClubEntity }, question: { required: true, type: () => String }, type: { required: true, enum: t["./common/repository/entity/club.entity"].QuestionType }, options: { required: false, type: () => [String] }, maxFiles: { required: false, type: () => Number }, required: { required: true, type: () => Boolean } } }], [import("./common/repository/entity/member.entity"), { "MemberEntity": { email: { required: true, type: () => String }, name: { required: true, type: () => String }, phone: { required: true, type: () => String }, password: { required: false, type: () => String }, role: { required: true, enum: t["./common/repository/entity/member.entity"].MemberRole }, permission: { required: true, enum: t["./common/repository/entity/member.entity"].MemberPermission }, club: { required: true, type: () => [t["./common/repository/entity/club.entity"].ClubEntity] }, created_at: { required: true, type: () => Date } } }], [import("./auth/dto/request/club-admin-setpassword.request.dto"), { "ClubAdminSetpasswordRequestDto": { pincode: { required: true, type: () => String, description: "\uBE44\uBC00\uBC88\uD638 \uC124\uC815 \uC694\uCCAD Pincode (\uB79C\uB364 6\uAE00\uC790 \uBB38\uC790\uC5F4,)", example: "a1b2c3" }, password: { required: true, type: () => String, description: "\uC124\uC815\uD560 \uBE44\uBC00\uBC88\uD638", example: "strong_password" } } }], [import("./auth/dto/response/sign-in.response.dto"), { "SignInResponseDto": { accessToken: { required: true, type: () => String, description: "JWT \uD615\uC2DD\uC758 Access Token" } } }], [import("./common/dto/APIException.dto"), { "APIException": { status: { required: true, description: "\uC5D0\uB7EC ENUM (ENUM Type)", example: "HttpStatus.INTERNAL_SERVER_ERROR", enum: t[".pnpm/@nestjs+common@11.0.11_reflect-metadata@0.2.2_rxjs@7.8.2/node_modules/@nestjs/common/enums/http-status.enum"].HttpStatus }, message: { required: true, type: () => String, description: "\uC5D0\uB7EC \uBA54\uC2DC\uC9C0", example: "\uB0B4\uBD80 \uC11C\uBC84 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.", default: "\uB0B4\uBD80 \uC11C\uBC84 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4." }, data: { required: false, type: () => Object } } }], [import("./auth/dto/request/sign-in.request.dto"), { "SignInRequestDto": { email: { required: true, type: () => String, description: "\uC774\uBA54\uC77C", example: "biz.kyunggi@lunaiz.com" }, password: { required: true, type: () => String, description: "\uBE44\uBC00\uBC88\uD638", example: "password" } } }], [import("./club/dto/request/club-template-mutate.request.dto"), { "ClubTemplateMutateRequestDto": { id: { required: true, type: () => String, description: "\uC9C8\uBB38\uC9C0 index", example: "1" }, question: { required: true, type: () => String, description: "\uC9C8\uBB38", example: "\uBB34\uC784\uC2B9\uCC28\uB97C \uD558\uC2E4\uAC74\uAC00\uC694?" }, type: { required: true, description: "\uC9C8\uBB38 \uD0C0\uC785", example: "SHORT_INPUT", enum: t["./common/repository/entity/club.entity"].QuestionType }, options: { required: false, type: () => [String], description: "\uC9C8\uBB38 \uC635\uC158 (\uC120\uD0DD\uD615 \uC9C8\uBB38\uC77C \uACBD\uC6B0)", example: [] }, maxFiles: { required: false, type: () => Number, description: "\uCD5C\uB300 \uD30C\uC77C \uAC1C\uC218 (\uD30C\uC77C \uC5C5\uB85C\uB4DC \uC9C8\uBB38\uC77C \uACBD\uC6B0)", example: 10 }, required: { required: true, type: () => Boolean, description: "\uD544\uC218 \uC5EC\uBD80", example: true } } }], [import("./club/dto/request/club-admin-mutate.request.dto"), { "ClubAdminMutateRequestDto": { email: { required: true, type: () => String, description: "\uC774\uBA54\uC77C", example: "biz.kyunggi@lunaiz.com" }, name: { required: true, type: () => String, description: "\uC774\uB984", example: "\uD64D\uAE38\uB3D9" }, phone: { required: true, type: () => String, description: "\uC804\uD654\uBC88\uD638", example: "01012345678" }, role: { required: true, description: "\uC5ED\uD560", example: "CLUB_LEADER", enum: t["./common/repository/entity/member.entity"].MemberRole } } }], [import("./common/repository/entity/apply.entity"), { "StudentEntity": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, phone: { required: true, type: () => String }, ci: { required: false, type: () => String }, di: { required: false, type: () => String } }, "ParentEntity": { name: { required: true, type: () => String }, phone: { required: true, type: () => String }, relationship: { required: true, type: () => String }, ci: { required: false, type: () => String }, di: { required: false, type: () => String } }, "FormAnswerEntity": { id: { required: true, type: () => String }, answer: { required: true, type: () => String }, files: { required: true, type: () => [String] } }, "ApplyEntity": { id: { required: true, type: () => Number }, password: { required: true, type: () => String }, student: { required: true, type: () => t["./common/repository/entity/apply.entity"].StudentEntity }, parent: { required: true, type: () => t["./common/repository/entity/apply.entity"].ParentEntity }, club: { required: true, type: () => t["./common/repository/entity/club.entity"].ClubEntity }, answers: { required: true, type: () => [t["./common/repository/entity/apply.entity"].FormAnswerEntity] }, status: { required: true, enum: t["./common/repository/entity/apply.entity"].CurrentStatus } } }], [import("./apply/dto/request/submit-application.request.dto"), { "SubmitApplicationRequestDto": { userInfo: { required: true, type: () => ({ id: { required: true, type: () => Number }, name: { required: true, type: () => String }, phone: { required: true, type: () => String }, verifiedRefId: { required: false, type: () => String } }) }, parentInfo: { required: true, type: () => ({ name: { required: true, type: () => String }, phone: { required: true, type: () => String }, relationship: { required: true, type: () => String }, verifiedRefId: { required: false, type: () => String } }) }, formAnswers: { required: true } } }], [import("./apply/dto/request/application-status-mutate.request.dto"), { "ApplicationStatusMutateRequestDto": { status: { required: true, enum: t["./common/repository/entity/apply.entity"].CurrentStatus } } }], [import("./apply/dto/response/pass-hash.response.dto"), { "PassHashResponseDto": { data: { required: true, type: () => ({ res_cd: { required: true, type: () => String }, res_msg: { required: true, type: () => String } }), description: "KCP \uACB0\uACFC Object" }, url: { required: false, type: () => String, description: "KCP \uBCF8\uC778\uD655\uC778 \uC694\uCCAD URL", example: "https://cert.kcp.co.kr/kcp_cert/cert_view.jsp" }, formData: { required: false, type: () => ({ site_cd: { required: true, type: () => String }, ordr_idxx: { required: true, type: () => String }, req_tx: { required: true, type: () => String }, cert_method: { required: true, type: () => String }, up_hash: { required: true, type: () => String }, cert_otp_use: { required: true, type: () => String }, web_siteid_hashYN: { required: true, type: () => String }, web_siteid: { required: true, type: () => String }, Ret_URL: { required: true, type: () => String }, cert_enc_use_ext: { required: true, type: () => String }, kcp_merchant_time: { required: true, type: () => String }, kcp_cert_lib_ver: { required: true, type: () => String }, kcp_cert_pass_use: { required: false, type: () => String }, kcp_cert_intent_use: { required: false, type: () => String }, kcp_page_submit_yn: { required: true, type: () => String } }), description: "KCP \uBCF8\uC778\uD655\uC778 \uC694\uCCAD Form Data" } } }], [import("./apply/dto/request/pass-callback.request.dto"), { "PassCallbackRequestDto": { res_cd: { required: true, type: () => String, description: "\uACB0\uACFC \uCF54\uB4DC", example: "0000" }, res_msg: { required: true, type: () => String, description: "\uACB0\uACFC \uBA54\uC2DC\uC9C0", example: "\uC815\uC0C1\uCC98\uB9AC" }, req_tx: { required: true, type: () => String, description: "\uC694\uCCAD \uC885\uB958 \uAD6C\uBD84", example: "otp_auth" }, cert_no: { required: true, type: () => String, description: "\uBCF8\uC778\uD655\uC778 \uACE0\uC720\uD55C \uC778\uC99D \uAC70\uB798\uBC88\uD638", example: "20220913123456" }, ordr_idxx: { required: true, type: () => String, description: "PASS \uBCF8\uC778\uC778\uC99D \uC694\uCCAD ID", example: "KGH20220913123456@abcdefghij" }, enc_cert_data2: { required: true, type: () => String, description: "\uAC1C\uC778\uC815\uBCF4 \uC554\uD638\uD654\uAC12", example: ".1.C73CFBAEFE2E9B89DFCEFA16E9607D0" }, up_hash: { required: true, type: () => String, description: "\uC694\uCCAD hash data", example: "B57CFD6CB4ADAEE...F6002066B1" }, dn_hash: { required: true, type: () => String, description: "\uC751\uB2F5\uB370\uC774\uD130 \uAC80\uC99D \uD574\uC26C", example: "93B83739C223DSSA93809D483920323A43C3893182" } } }], [import("./apply/dto/request/application-status-retrieve.request.dto"), { "ApplicationStatusRetrieveRequestDto": { studentName: { required: true, type: () => String, description: "\uC9C0\uC6D0\uC790 \uC774\uB984", example: "\uD64D\uAE38\uB3D9" }, password: { required: true, type: () => String, description: "\uBC1C\uAE09\uBC1B\uC740 \uC9C0\uC6D0\uC11C \uACE0\uC720 \uD328\uC2A4\uC6CC\uB4DC", example: "a1b2c3" } } }], [import("./apply/dto/request/send-notification.request.dto"), { "SendNotificationRequestDto": { content: { required: true, type: () => String, description: "\uC54C\uB9BC \uB0B4\uC6A9" } }, "SendBulkNotificationRequestDto": { ids: { required: true, type: () => [Number], description: "\uD559\uC0DD \uD559\uBC88 \uBAA9\uB85D" }, content: { required: true, type: () => String, description: "\uC54C\uB9BC \uB0B4\uC6A9" } } }], [import("./apply/dto/response/pass-callback.response.dto"), { "PassCallbackResponseDto": { res_cd: { required: true, type: () => String, description: "\uACB0\uACFC \uCF54\uB4DC", example: "0000" }, res_msg: { required: true, type: () => String, description: "\uACB0\uACFC \uBA54\uC2DC\uC9C0", example: "\uC815\uC0C1\uCC98\uB9AC" }, user_name: { required: true, type: () => String, description: "\uBA85\uC758\uC790\uBA85", example: "\uD64D\uAE38\uB3D9" }, phone_no: { required: true, type: () => String, description: "\uBCF8\uC778\uD655\uC778 \uD734\uB300\uD3F0 \uBC88\uD638", example: "01012345678" }, is_parent: { required: true, type: () => Boolean, description: "\uBA85\uC758\uC790\uAC00 \uC790\uB140 \uB300\uC2E0 \uC778\uC99D \uD55C \uACBD\uC6B0 (\uCD5C\uC18C 25\uC138\uC778 \uACBD\uC6B0)", example: false } } }], [import("./common/repository/entity/schedule.entity"), { "ScheduleEntity": { id: { required: true, type: () => String }, title: { required: true, type: () => String }, category: { required: true, enum: t["./common/repository/entity/schedule.entity"].ScheduleCategory }, start_at: { required: true, type: () => Date }, created_at: { required: true, type: () => Date } } }], [import("./schedule/dto/request/schedule-mutate.request.dto"), { "ScheduleMutateRequestDto": { title: { required: true, type: () => String, description: "\uC2A4\uCF00\uC974 \uC81C\uBAA9", example: "\uC2A4\uCF00\uC974 \uC81C\uBAA9" }, category: { required: true, description: "\uC2A4\uCF00\uC974 \uD0C0\uC785", example: "OPERATION_START", enum: t["./common/repository/entity/schedule.entity"].ScheduleCategory }, timestamp: { required: true, type: () => Date, description: "\uC2A4\uCF00\uC974 \uC77C\uC815", example: "2021-01-01T00:00:00.000Z" } } }], [import("./cdn/dto/response/presigned-url.response.dto"), { "PresignedUrlResponseDto": { key: { required: true, type: () => String, description: "CDN\uC5D0 \uC5C5\uB85C\uB4DC\uB418\uB294 \uD30C\uC77C\uBA85", example: "apply/20210913123456_filename.jpg" }, fileName: { required: true, type: () => String, description: "\uC2E4\uC81C \uC6D0\uBCF8 \uD30C\uC77C\uBA85", example: "filename.jpg" }, url: { required: true, type: () => String, description: "CDN \uC5C5\uB85C\uB4DC URL", example: "https://....r2.cloudflarestorage.com/apply/20210913123456_filename.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=...&X-Amz-Date=...&X-Amz-Expires=3600&X-Amz-Signature=...&X-Amz-SignedHeaders=host&x-id=PutObject" } } }], [import("./common/repository/entity/notice.entity"), { "NoticeCategoryEntity": { id: { required: true, type: () => String }, name: { required: true, type: () => String } }, "NoticeEntity": { id: { required: true, type: () => Number }, category: { required: true, type: () => t["./common/repository/entity/notice.entity"].NoticeCategoryEntity }, title: { required: true, type: () => String }, content: { required: true, type: () => String }, created_at: { required: true, type: () => Date } } }], [import("./notice/dto/request/notice-mutate.request.dto"), { "NoticeMutateRequestDto": { title: { required: true, type: () => String, description: "\uACF5\uC9C0\uC0AC\uD56D \uC81C\uBAA9", example: "\uACF5\uC9C0\uC0AC\uD56D \uC81C\uBAA9" }, content: { required: true, type: () => String, description: "\uACF5\uC9C0\uC0AC\uD56D \uB0B4\uC6A9", example: "\uACF5\uC9C0\uC0AC\uD56D \uB0B4\uC6A9" } } }], [import("./common/repository/entity/status.entity"), { "StatusEntity": { status: { required: true, enum: t["./common/repository/entity/status.entity"].ServiceStatus } } }], [import("./common/dto/APIResponse.dto"), { "APIResponseDto": { code: { required: true, type: () => String, description: "\uC0C1\uD0DC \uCF54\uB4DC (ENUM)", example: "OPERATION_COMPLETE" }, status: { required: true, type: () => Number, description: "HTTP \uC0C1\uD0DC \uCF54\uB4DC", example: 200 }, data: { required: false, type: () => Object }, responseAt: { required: true, type: () => String, description: "\uC694\uCCAD \uC2E4\uD589 \uB2F9\uC2DC \uC11C\uBC84 \uC2DC\uAC04 (ISO 8601)", example: "2021-08-01T00:00:00.000Z" } } }]], "controllers": [[import("./auth/auth.controller"), { "AuthController": { "signIn": { type: t["./auth/dto/response/sign-in.response.dto"].SignInResponseDto }, "setAdminPassword": { type: Object }, "getProfile": { type: Object } } }], [import("./club/club.controller"), { "ClubController": { "retrieveClubList": { type: [t["./common/repository/entity/club.entity"].ClubEntity] }, "retrieveClubInfo": { type: t["./common/repository/entity/club.entity"].ClubEntity }, "retrieveClubApplicationForm": { type: [Object] }, "updateClubApplicationForm": {}, "retrieveClubAdmins": { type: [Object] }, "addClubAdmin": {}, "deleteClubAdmin": {} } }], [import("./apply/apply.controller"), { "ApplyController": { "getPassHashData": { type: t["./apply/dto/response/pass-hash.response.dto"].PassHashResponseDto }, "passCallback": {}, "getSelectChance": {}, "createApplication": {}, "retrieveApplicationForStudent": {}, "retrieveApplicationsList": { type: [t["./common/repository/entity/apply.entity"].ApplyEntity] }, "sendBulkNotification": { type: Object }, "retrieveApplication": { type: t["./common/repository/entity/apply.entity"].ApplyEntity }, "updateApplicationStatus": {}, "sendNotification": { type: Object }, "finalSubmit": {} } }], [import("./schedule/schedule.controller"), { "ScheduleController": { "retrieveSchedulesList": { type: [t["./common/repository/entity/schedule.entity"].ScheduleEntity] }, "createSchedule": {}, "updateSchedule": {}, "deleteSchedule": {} } }], [import("./cdn/cdn.controller"), { "CdnController": { "createPresignedUrl": { type: t["./cdn/dto/response/presigned-url.response.dto"].PresignedUrlResponseDto } } }], [import("./notice/notice.controller"), { "NoticeController": { "retrieveNoticesList": { type: [Object] }, "retrieveNotice": { type: Object }, "createNotice": {}, "updateNotice": {}, "deleteNotice": {} } }], [import("./status/status.controller"), { "StatusController": { "retrieveServiceStatus": { type: t["./common/repository/entity/status.entity"].StatusEntity }, "updateServiceStatus": {} } }], [import("./advertisement/advertisement.controller"), { "AdvertisementController": { "retrieveAdvertisement": {} } }]] } };
};